# electricity_prediction.py

import requests
import tensorflow as tf
from api import hae_saa_api_avain

def hae_saaennuste(kaupungit, api_avain):
    saaennusteet = {}
    for kaupunki in kaupungit:
        try:
            url = f'http://api.openweathermap.org/data/2.5/weather?q={kaupunki},fi&appid={api_avain}'
            vastaus = requests.get(url)
            vastaus.raise_for_status()  # Tarkista HTTP-virheet
            tiedot = vastaus.json()

            saaennusteet[kaupunki] = {
                'lämpötila': tiedot['main']['temp'],
                'tuulen_nopeus': tiedot['wind']['speed'],
            }
        except Exception as e:
            print(f"Virhe kaupungin {kaupunki} säätietojen hakemisessa: {e}")
    return saaennusteet

def ennusta_sahkon_hinta(saaennusteet):
    # Luo yksinkertainen rekurrenttinen neuroverkko TensorFlow:n avulla
    model = tf.keras.Sequential([
        tf.keras.layers.SimpleRNN(10, input_shape=(1, 1)),
        tf.keras.layers.Dense(1)
    ])

    # Muotoile data sopivaan muotoon
    data = tf.constant([[saaennusteet['Helsinki']['lämpötila']]], dtype=tf.float32)

    # Käytä mallia ennustamiseen
    ennuste = model.predict(data)

    return ennuste[0, 0]

if __name__ == "__main__":
    # Hae API-avain omasta tiedostosta
    api_avain = hae_saa_api_avain()

    kaupungit = ['Helsinki', 'Turku', 'Tampere', 'Oulu']

    # Haetaan säätiedot
    saaennusteet = hae_saaennuste(kaupungit, api_avain)
    print(saaennusteet)

    # Ennustetaan sähkön hinta
    sahkon_ennuste = ennusta_sahkon_hinta(saaennusteet)
    print(f"Sähkön hinta ennuste: {sahkon_ennuste}")
